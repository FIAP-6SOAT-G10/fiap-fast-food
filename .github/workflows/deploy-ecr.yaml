name: Build and Deploy to ECR

on:
  push:
    branches:
      - '**'

env:
  AWS_REGION: "us-east-1"

jobs:
  build-and-deploy:
    name: Build and Deploy Docker Image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}

      - name: Build with Maven
        run: mvn clean install -DskipTests -Pdocker -q

      - name: Build Docker Image
        run: docker-compose build fiapfastfood

      - name: Get Docker Image ID
        id: image_id
        run: echo "::set-output name=image_id::$(docker images | grep fiap | awk '{print $3}' | uniq)"

      - name: Get AWS Account ID
        id: aws_account
        run: echo "::set-output name=account_id::$(aws sts get-caller-identity --query Account --output text)"

      - name: Login to Amazon ECR
        run: |
          aws ecr get-login-password --region ${{ env.AWS_REGION }} | docker login --username AWS --password-stdin ${{ steps.aws_account.outputs.account_id }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com

      - name: Tag Docker Image
        run: docker tag ${{ steps.image_id.outputs.image_id }} ${{ steps.aws_account.outputs.account_id }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/fiap_fast_food_app:1.0

      - name: Push Docker Image to ECR
        run: docker push ${{ steps.aws_account.outputs.account_id }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/fiap_fast_food_app:1.0

      - name: Update kubeconfig for EKS
        run: aws eks update-kubeconfig --region ${{ env.AWS_REGION }} --name fiap_fast_food_eks

      - name: Apply Kubernetes ConfigMaps
        run: kubectl apply -f infra/cm/.

      - name: Apply Kubernetes Secrets
        run: kubectl apply -f infra/secrets/.

      - name: Apply Kubernetes Deployments
        run: kubectl apply -f infra/deployment/.

      - name: Apply Kubernetes HPA
        run: kubectl apply -f infra/hpa/.

      - name: Apply Kubernetes Services
        run: kubectl apply -f infra/svc/.
